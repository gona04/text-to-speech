// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace texttospeechapi.Migrations
{
    [DbContext(typeof(ConvertedTextContext))]
    [Migration("20231209051740_MadeSmallChanges")]
    partial class MadeSmallChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("text_to_speech_api.Models.ConvertedTextItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("SentimentAnalyserItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConvertedTextItem");
                });

            modelBuilder.Entity("text_to_speech_api.Models.SentimentAnalyserItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("ConvertedTextId")
                        .HasColumnType("bigint");

                    b.Property<int>("Negative")
                        .HasColumnType("int");

                    b.Property<int>("Neutral")
                        .HasColumnType("int");

                    b.Property<int>("Positive")
                        .HasColumnType("int");

                    b.Property<string>("sentiment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ConvertedTextId")
                        .IsUnique();

                    b.ToTable("SentimentAnalyserItems");
                });

            modelBuilder.Entity("text_to_speech_api.Models.SentimentAnalyserItem", b =>
                {
                    b.HasOne("text_to_speech_api.Models.ConvertedTextItem", "ConvertedTextItem")
                        .WithOne("SentimentAnalyserItem")
                        .HasForeignKey("text_to_speech_api.Models.SentimentAnalyserItem", "ConvertedTextId");

                    b.Navigation("ConvertedTextItem");
                });

            modelBuilder.Entity("text_to_speech_api.Models.ConvertedTextItem", b =>
                {
                    b.Navigation("SentimentAnalyserItem")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
